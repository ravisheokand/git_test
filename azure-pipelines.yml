trigger:
  branches:
    include:
      - feature/*
      - main

pool:
  name: SelfAgent_RK

parameters:
  # - name: environment
  #   displayName: Environment
  #   type: string
  #   values:
  #     - dev
  #     - prod

  - name: Build
    displayName: Build (Run Init,Validate,Plan) ?
    type: string
    values:
      - true
      - false

  - name: Deploy
    displayName: Deploy(Manual validation + Apply) ?
    type: string
    values:
      - true
      - false

variables:
  # workDir: '$(System.DefaultWorkingDirectory)/environment/${{parameters.environment}}'
  config_path: '$(System.DefaultWorkingDirectory)'
  OverrideSubscriptionID: '3a45f28c-3b05-4d1b-b640-21585be45e39'

stages:
# ----------------------
# Stage 1: Build
# ----------------------
- stage: Build
  displayName: Build Stage (Init + Plan)
  condition: eq('${{ parameters.Build }}', true)
  jobs:
# Stage 1 Job 1
    - job: terraform_init_fmt_validate
      displayName: Terraform Init + Fmt + Validate
      steps:
        - task: TerraformInstaller@1
          displayName: Install Terraform
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTask@5
          displayName: Terraform Init
          inputs:
            provider: 'azurerm'
            command: 'init'
            # workingDirectory: '$(workDir)'
            workingDirectory: '$(config_path)'
            backendServiceArm: 'SC_RK'
            backendAzureRmOverrideSubscriptionID: '$(OverrideSubscriptionID)'
            backendAzureRmResourceGroupName: 'DoNotDeleteRg'
            backendAzureRmStorageAccountName: 'donotdeletestorage555'
            backendAzureRmContainerName: 'tfstate'
            backendAzureRmKey: 'rkstest.tfstate'
        - task: TerraformTask@5
          displayName: Terraform Format
          inputs:
            provider: 'azurerm'
            command: 'custom'
            # workingDirectory: '$(workDir)'
            workingDirectory: '$(config_path)'
            commandOptions: 'fmt'
            outputTo: 'console'
            environmentServiceNameAzureRM: 'SC_RK'
            environmentAzureRmOverrideSubscriptionID: '$(OverrideSubscriptionID)'
        - task: TerraformTask@5
          displayName: Terraform Validate
          inputs:
            provider: 'azurerm'
            command: 'validate'
            # workingDirectory: '$(workDir)'
            workingDirectory: '$(config_path)'
# Stage 1 Job 2
    - job: terraform_init_plan
      dependsOn: terraform_init_fmt_validate
      condition: succeeded('terraform_init_fmt_validate')
      displayName: Terraform Init + Plan
      steps:
        - task: TerraformInstaller@1
          displayName: Install Terraform
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTask@5
          displayName: Terraform Init
          inputs:
            provider: 'azurerm'
            command: 'init'
            # workingDirectory: '$(workDir)'
            workingDirectory: '$(config_path)'
            backendServiceArm: 'SC_RK'
            backendAzureRmOverrideSubscriptionID: '$(OverrideSubscriptionID)'
            backendAzureRmResourceGroupName: 'DoNotDeleteRg'
            backendAzureRmStorageAccountName: 'donotdeletestorage555'
            backendAzureRmContainerName: 'tfstate'
            backendAzureRmKey: 'rkstest.tfstate'
        - task: TerraformTask@5
          displayName: Terraform Plan
          inputs:
            provider: 'azurerm'
            command: 'plan'
            # workingDirectory: '$(workDir)'
            workingDirectory: '$(config_path)'
            environmentServiceNameAzureRM: 'SC_RK'
            environmentAzureRmOverrideSubscriptionID: '$(OverrideSubscriptionID)'
# ----------------------
# Stage 2: Deploy
# ----------------------
- stage: Deploy
  displayName: Deploy Stage (Manual Validation and Apply)
  dependsOn: Build
  condition: eq('${{ parameters.Deploy }}', true)
  jobs:
# Stage 2 Job 1
    - job: manual_validation
      displayName: Manual Validation
      pool: server
      steps:
        - task: ManualValidation@1
          inputs:
            notifyUsers: 'erashe25@gmail.com'
            instructions: 'Check and approve'
# Stage 2 Job 2
    - job: terraform_apply
      displayName: Terraform Apply
      dependsOn: manual_validation
      condition: succeeded('manual_validation')
      steps:
        - task: TerraformInstaller@1
          displayName: Install Terraform
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTask@5
          displayName: Terraform Init
          inputs:
            provider: 'azurerm'
            command: 'init'
            # workingDirectory: '$(workDir)'
            workingDirectory: '$(config_path)'
            backendServiceArm: 'SC_RK'
            backendAzureRmOverrideSubscriptionID: '$(OverrideSubscriptionID)'
            backendAzureRmResourceGroupName: 'DoNotDeleteRg'
            backendAzureRmStorageAccountName: 'donotdeletestorage555'
            backendAzureRmContainerName: 'tfstate'
            backendAzureRmKey: 'rkstest.tfstate'
            commandOptions: '-reconfigure'
        - task: TerraformTask@5
          displayName: Terraform Apply
          inputs:
            provider: 'azurerm'
            command: 'apply'
            # workingDirectory: '$(workDir)'
            workingDirectory: '$(config_path)'
            environmentServiceNameAzureRM: 'SC_RK'
            environmentAzureRmOverrideSubscriptionID: '$(OverrideSubscriptionID)'
