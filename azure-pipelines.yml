trigger: 
  branches:
    include:
      - feature/*
      - main

pool:
  name: SelfAgent_RK

variables:
  config_path: '$(System.DefaultWorkingDirectory)'
  OverrideSubscriptionID: '3a45f28c-3b05-4d1b-b640-21585be45e39'

parameters:
  - name: runinit
    displayName: Run Init?
    type: string
    values:
      - true
      - false

  - name: runplan
    displayName: Run Plan?
    type: string
    values:
      - true
      - false

  - name: validation
    displayName: Manual Validation?
    type: string
    values:
      - true
      - false

  - name: runapply
    displayName: Run Apply?
    type: string
    values:
      - true
      - false

stages:
  - stage: Init
    displayName: Initial
    condition: eq('${{ parameters.runinit }}', 'true')  # Only run if runinit is 'true'
    jobs:
      - job: Install
        displayName: Terraform Install
        steps:
          - task: TerraformInstaller@1
            displayName: Install Terraform
            inputs:
              terraformVersion: 'latest'
      - job: Init
        displayName: Terraform Init
        dependsOn: Install
        steps:
          - task: TerraformTask@5
            displayName: Terraform Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(config_path)'
              backendServiceArm: 'SC_RK'
              backendAzureRmOverrideSubscriptionID: '$(OverrideSubscriptionID)'
              backendAzureRmResourceGroupName: 'DoNotDeleteRg'
              backendAzureRmStorageAccountName: 'donotdeletestorage555'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'rkstest.tfstate'

  - stage: Plan
    displayName: Plan
    condition: eq('${{ parameters.runplan }}', 'true')  # Only run if runplan is 'true'
    dependsOn: Init
    jobs:
      - job: Init
        displayName: Terraform Init
        steps:
          - task: TerraformTask@5
            displayName: Terraform Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(config_path)'
              backendServiceArm: 'SC_RK'
              backendAzureRmOverrideSubscriptionID: '$(OverrideSubscriptionID)'
              backendAzureRmResourceGroupName: 'DoNotDeleteRg'
              backendAzureRmStorageAccountName: 'donotdeletestorage555'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'rkstest.tfstate'
      - job: plan
        displayName: Terraform Plan
        steps:
          - task: TerraformTask@5
            displayName: Terraform Plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(config_path)'
              environmentServiceNameAzureRM: 'SC_RK'
              environmentAzureRmOverrideSubscriptionID: '$(OverrideSubscriptionID)'

  - stage: ManualValidation
    displayName: Manual Validation
    dependsOn: Plan
    condition: and(succeeded(), eq('${{ parameters.validation }}', 'true'))  # Only run if validation is 'true'
    jobs:
      - job: Manual_validation
        displayName: Manual Validation
        steps:
          - task: ManualValidation@1
            inputs:
              notifyUsers: 'ravikumarsheokand1985@gmail.com'
              instructions: 'Check and approve'

  - stage: Apply
    displayName: Apply
    dependsOn: ManualValidation
    condition: and(succeeded(), eq('${{ parameters.runapply }}', 'true'))  # Only run if runapply is 'true'
    jobs:
      - job: Install
        displayName: Terraform Install
        steps:
          - task: TerraformInstaller@1
            displayName: Install Terraform
            inputs:
              terraformVersion: 'latest'
      - job: Init
        displayName: Terraform Init
        dependsOn: Install
        steps:
          - task: TerraformTask@5
            displayName: Terraform Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(config_path)'
              backendServiceArm: 'SC_RK'
              backendAzureRmOverrideSubscriptionID: '$(OverrideSubscriptionID)'
              backendAzureRmResourceGroupName: 'DoNotDeleteRg'
              backendAzureRmStorageAccountName: 'donotdeletestorage555'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'rkstest.tfstate'
      - job: Apply
        displayName: Terraform Apply
        steps:
          - task: TerraformTask@5
            displayName: Terraform Apply
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(config_path)'
              environmentServiceNameAzureRM: 'SC_RK'
              environmentAzureRmOverrideSubscriptionID: '$(OverrideSubscriptionID)'
