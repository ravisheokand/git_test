trigger: 
  branches:
    include:
      - feature/*
      - main

pool:
  name: SelfAgent_RK

variables:
  config_path: '$(System.DefaultWorkingDirectory)'
  OverrideSubscriptionID: '3a45f28c-3b05-4d1b-b640-21585be45e39'

stages:
  - stage: Build
    displayName: Init + Plan
    # condition: eq('${{ parameters.initplan }}', 'true')
    jobs:
      - job: TerraformInit
        displayName: Terraform Init
        steps:
          - task: TerraformInstaller@1
            displayName: Install Terraform
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTask@5
            displayName: Terraform Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(config_path)'
              backendServiceArm: 'SC_RK'
              backendAzureRmOverrideSubscriptionID: '$(OverrideSubscriptionID)'
              backendAzureRmResourceGroupName: 'DoNotDeleteRg'
              backendAzureRmStorageAccountName: 'donotdeletestorage555'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'rkstest.tfstate'

      - job: TerraformPlan
        displayName: Terraform Plan
        steps:
          - task: TerraformInstaller@1
            displayName: Install Terraform
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTask@5
            displayName: Terraform Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(config_path)'
              backendServiceArm: 'SC_RK'
              backendAzureRmOverrideSubscriptionID: '$(OverrideSubscriptionID)'
              backendAzureRmResourceGroupName: 'DoNotDeleteRg'
              backendAzureRmStorageAccountName: 'donotdeletestorage555'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'rkstest.tfstate'
          - task: TerraformTask@5
            displayName: Terraform Plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(config_path)'
              environmentServiceNameAzureRM: 'SC_RK'
              environmentAzureRmOverrideSubscriptionID: '$(OverrideSubscriptionID)'



  - stage: Apply
    displayName: Apply
    # condition: and(succeeded(), eq('${{ parameters.runapply }}', 'true'))  # Only run if runapply is 'true'
    jobs:
      - job: ApplyJob
        displayName: Terraform Apply
        steps:
          - task: TerraformInstaller@1
            displayName: Install Terraform
            inputs:
              terraformVersion: 'latest'
          
          - task: TerraformTask@5
            displayName: Terraform Init
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(config_path)'
              backendServiceArm: 'SC_RK'
              backendAzureRmOverrideSubscriptionID: '$(OverrideSubscriptionID)'
              backendAzureRmResourceGroupName: 'DoNotDeleteRg'
              backendAzureRmStorageAccountName: 'donotdeletestorage555'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'rkstest.tfstate'

          - task: TerraformTask@5
            displayName: Terraform Apply
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(config_path)'
              environmentServiceNameAzureRM: 'SC_RK'
              environmentAzureRmOverrideSubscriptionID: '$(OverrideSubscriptionID)'